name: Master Pipeline
on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test pipeline
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.2'
      
      - name: Tools versions
        run: |
          go version   

      - name: Run Vet
        run: |
          make vet

      - name: Run Unit Tests
        id: unit
        run: |
          echo "::set-output name=coverage::$(make unit | egrep -o '[0-9]+\.[0-9]+%' | egrep -o '[0-9]+\.[0-9]+')"

      - name: Run Code Coverage
        env:
          baseline_coverage: 85.0
          coverage: ${{ steps.unit.outputs.coverage }}
        run: |
          is_greater=$(echo "$coverage $baeline_coverage" | awk 'BEGIN { print ($1 >= $2) ? "0" : "1" }')
          exit $is_greater

  deployment:
    name: Deployment
    runs-on: ubuntu-20.04
    needs: [test]
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build Docker image
        id: docker_build_step
        env:
          IMAGE_TAG: ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}
        run: |
          docker build -t hello:latest -f Dockerfile .
          docker tag hello:latest ${IMAGE_TAG}
          docker push ${IMAGE_TAG}
          echo "::set-output name=image_tag::${IMAGE_TAG}"

      - name: Update Task Definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: task_definition_step        
        with:
          task-definition: ./deployments/taskDefinition.json
          container-name: hello
          image: ${{ steps.docker_build_step.outputs.image_tag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task_definition_step.outputs.task-definition }}
          service: hello-service
          cluster: cluster
          wait-for-service-stability: true
